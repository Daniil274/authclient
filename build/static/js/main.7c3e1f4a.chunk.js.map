{"version":3,"sources":["reportWebVitals.js","actions/Requests.js","loginForm.js","RegisterForm.js","header.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userPostFetch","user","a","fetch","method","headers","Accept","body","JSON","stringify","resp","json","data","message","console","log","localStorage","setItem","jwt","LoginForm","props","formSubmit","bind","Masseges","handleChange","signRequest","state","msg","status","email","password","check","query","event","document","getElementById","classList","remove","add","target","id","this","setState","value","prop","className","preventDefault","onSubmit","style","weight","to","aria-current","htmlFor","type","name","onChange","aria-describedby","display","role","React","Component","RegisterForm","password_valid","agree","typeAuth","nickname","Header","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","ReactDOM","render","path"],"mappings":"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","file":"static/js/main.7c3e1f4a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," export const userPostFetch =async user => {\r\n                return fetch(\"http://localhost:8000/auth/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                },\r\n                body: JSON.stringify({user})\r\n            })\r\n                .then(resp => resp.json())\r\n                .then(data => {\r\n                    if (data.message) {\r\n                       console.log(data) //Тут прописываем логику\r\n                    } else {\r\n                        localStorage.setItem(\"token\", data.jwt)\r\n                    }\r\n                })\r\n\r\n    }\r\n\r\n    const loginUser = userObj=> ({\r\n        type: 'LOGIN_USER',\r\n        payload: userObj\r\n    });","import React from 'react';\r\nimport {userPostFetch} from \"./actions/Requests\";\r\nimport {Link} from 'react-router-dom';\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formSubmit = this.formSubmit.bind(this);\r\n        this.Masseges = this.Masseges;\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.signRequest = this.signRequest.bind(this);\r\n        this.state = {\r\n            msg: {\r\n                status:\"none\",\r\n            },\r\n            data:{\r\n                email:'',\r\n                password:'',\r\n                check:''\r\n            }\r\n\r\n        }\r\n    }\r\n    async signRequest(props){\r\n        let query = '?email='+props.email+'&password='+props.password;\r\n        console.log(props);\r\n        let data;\r\n        await fetch('http://localhost:8000/auth/login'+query)\r\n            .then(event=>{\r\n                console.log(event);\r\n                data=event;\r\n            });\r\n        document.getElementById('submit-text').classList.remove('d-none')\r\n        document.getElementById('spinner').classList.add('d-none');\r\n        return(\r\n            <div><data/></div>\r\n        )\r\n    }\r\n    handleChange(event){\r\n        const target = event.target;\r\n        switch(target.id){\r\n            case 'emailInput':\r\n                this.setState({data:{email:target.value}});\r\n                break;\r\n            case 'exampleInputPassword1':\r\n                this.setState({data:{password:target.value}});\r\n                break;\r\n        }\r\n    }\r\n    Masseges(prop) {\r\n        switch (prop.status) {\r\n            case 'unsuccess':\r\n                return (\r\n                    <div>\r\n                        <div id={'unsuccessful-alert'} className=\"alert alert-danger text-center\">\r\n                            unsuccessful\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'success':\r\n                return (\r\n                    <div>\r\n                        <div id={'unsuccessful-alert'} className=\"alert alert-success text-center\">\r\n                            successful\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            case 'none':\r\n                return <div></div>\r\n                break;\r\n        }\r\n    }\r\n\r\n    formSubmit(event) {\r\n        event.preventDefault();\r\n        document.getElementById('submit-text').classList.add('d-none')\r\n        document.getElementById('spinner').classList.remove('d-none');\r\n        let data={\r\n            email:document.getElementById('emailInput').value,\r\n                password:document.getElementById('exampleInputPassword1').value\r\n            };\r\n        console.log(document.getElementById('emailInput').value+' : '+document.getElementById('exampleInputPassword1').value)\r\n        console.log(this.state.data.email+' + '+this.state.data.password);\r\n        //this.signRequest(data);\r\n        userPostFetch(data);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"mt-100 border shadow-lg p-3 mb-5 bg-white rounded p-5\">\r\n                            <form onSubmit={this.formSubmit} id={'auth-form'} className={\"login-form\"}>\r\n                                <div className=\"btn-group d-block mb-3\" style={{weight: '100%'}}>\r\n                                    <Link to={\"/sign\"} className=\"w-50 btn btn-primary active\" aria-current=\"page\">Log In</Link>\r\n                                    <Link to={\"/register\"} className=\"w-50 btn btn-primary\">Register</Link>\r\n                                </div>\r\n                                <div className=\"rounded mb-3\">\r\n                                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                                    <input type=\"email\" id=\"emailInput\" name=\"email\" className=\"form-control\" onChange={this.handleChange}\r\n                                           aria-describedby=\"emailHelp\"/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"mb-3 form-check\">\r\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n                                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\r\n                                </div>\r\n                                <div id={'unsuccessful-alert'} className=\"alert alert-danger text-center\"\r\n                                     style={{display: \"none\"}}>\r\n                                </div>\r\n                                <this.Masseges status={this.state.msg.status}/>\r\n                                <button type=\"submit\" className=\"w-100 btn btn-primary d-flex justify-content-center\"><span id={\"submit-text\"}>Log in</span>\r\n                                    <div className=\"spinner-border d-none text-light\" id={\"spinner\"} role=\"status\">\r\n                                        <span className=\"visually-hidden\">Загрузка...</span>\r\n                                    </div></button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {LoginForm};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {userPostFetch} from \"./actions/Requests\";\r\nclass RegisterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formSubmit = this.formSubmit.bind(this);\r\n        this.Masseges = this.Masseges.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.signRequest = this.signRequest.bind(this);\r\n        this.state = {\r\n            msg: {\r\n                status:\"none\",\r\n                message:''\r\n            },\r\n            data:{\r\n                name:'',\r\n                email:'',\r\n                password:'',\r\n                password_valid:'',\r\n                agree:''\r\n            },\r\n            typeAuth:''\r\n        }\r\n    }\r\n    async signRequest(props){\r\n        let query = '?email='+props.email+'&password='+props.password;\r\n        console.log(props);\r\n        let data;\r\n        await fetch('http://localhost:8000/auth/login'+query)\r\n            .then(event=>{\r\n                console.log(event);\r\n                data=event;\r\n            });\r\n        document.getElementById('submit-text').classList.add('d-none')\r\n        document.getElementById('spinner').classList.remove('d-none');\r\n        return(\r\n            <div><data/></div>\r\n        )\r\n    }\r\n    handleChange(event){\r\n        const target = event.target;\r\n        switch(target.id){\r\n            case 'nicknameInput':\r\n                this.setState({data:{email:target.value}});\r\n                break;\r\n                case 'emailInput':\r\n                this.setState({data:{email:target.value}});\r\n                break;\r\n            case 'exampleInputPassword1':\r\n                this.setState({data:{password:target.value}});\r\n                break;\r\n            case 'exampleInputPassword2':\r\n                this.setState({data:{password_valid:target.value}});\r\n                break;\r\n        }\r\n    }\r\n    Masseges(prop) {\r\n        switch (prop.status) {\r\n            case 'unsuccess':\r\n                return (\r\n                    <div>\r\n                        <div id={'unsuccessful-alert'} className=\"alert alert-danger text-center\">\r\n                            {this.state.msg.message}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'success':\r\n                return (\r\n                    <div>\r\n                        <div id={'unsuccessful-alert'} className=\"alert alert-success text-center\">\r\n                            {this.state.msg.message}\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            case 'none':\r\n                return <div></div>\r\n                break;\r\n        }\r\n    }\r\n\r\n    formSubmit(event) {\r\n        event.preventDefault();\r\n        if (document.getElementById('exampleInputPassword1').value===document.getElementById('exampleInputPassword2').value){\r\n        let data={\r\n            email:document.getElementById('emailInput').value,\r\n            nickname:document.getElementById('nicknameInput').value,\r\n            password:document.getElementById('exampleInputPassword1').value,\r\n        };\r\n        console.log(document.getElementById('emailInput').value+' : '+document.getElementById('exampleInputPassword1').value)\r\n        console.log(this.state.data.email+' + '+this.state.data.password);\r\n        console.log(userPostFetch(data));\r\n\r\n    }else this.setState({msg:{status:\"unsuccess\",message:\"Пароли не совпадают!\"}})\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"mt-100 border shadow-lg p-3 mb-5 bg-white rounded p-5\">\r\n                            <form onSubmit={this.formSubmit} id={'auth-form'} className={\"register-form\"}>\r\n                                <div className=\"btn-group d-block mb-3\" style={{weight: '100%'}}>\r\n                                    <Link to={\"/sign\"} className=\"w-50 btn btn-primary\" aria-current=\"page\">Log In</Link>\r\n                                    <Link to={\"/register\"} className=\"w-50 btn btn-primary active\">Register</Link>\r\n                                </div>\r\n                                <div className=\"rounded mb-3\">\r\n                                    <label htmlFor=\"nicknameInput\" className=\"form-label\">Nickname</label>\r\n                                    <input type=\"text\" id=\"nicknameInput\" name=\"nickname\" className=\"form-control\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"rounded mb-3\">\r\n                                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                                    <input type=\"email\" id=\"emailInput\" name=\"email\" className=\"form-control\" onChange={this.handleChange}\r\n                                           aria-describedby=\"emailHelp\"/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"exampleInputPassword2\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword2\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"mb-3 form-check\">\r\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n                                    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\r\n                                </div>\r\n                                <div id={'unsuccessful-alert'} className=\"alert alert-danger text-center\"\r\n                                     style={{display: \"none\"}}>\r\n                                </div>\r\n                                <this.Masseges status={this.state.msg.status}/>\r\n                                <button type=\"submit\" className=\"w-100 btn btn-primary\"><span id={\"submit-text\"}>Sign Up</span>\r\n                                    <div className=\"spinner-border d-none text-light\" id={\"spinner\"} role=\"status\">\r\n                                        <span className=\"visually-hidden\">Загрузка...</span>\r\n                                    </div></button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {RegisterForm};","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Navbar</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/sign\">Log in</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport {Header};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {LoginForm} from './loginForm';\nimport {RegisterForm} from './RegisterForm';\nimport {Header} from \"./header\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nReactDOM.render(\n    <div>\n        <Router>\n            <Header/>\n            <Switch>\n                <Route path={\"/register\"}>\n                    <div><RegisterForm/></div>\n                </Route>\n                <Route path={\"/sign\"}>\n                    <div><LoginForm/></div>\n                </Route>\n            </Switch>\n        </Router></div>\n,\n    document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}